export interface ItemData {
  name: string
  id: string
  category: string
  content?: string
  date?: string
  sentiment?: "positive" | "neutral" | "negative"
  keywords?: string[]
  duration?: number // in minutes
  participants?: number
  vcon?: VConData // Add vCon data
}

export interface VConDialog {
  type: string
  start: string
  parties: number[]
  originator: number
  mimetype: string
  body: string
}

export interface VConParty {
  tel?: string
  mailto?: string
  name: string
  role: string
  id: string
}

export interface VConData {
  uuid: string
  vcon: string
  created_at: string
  parties: VConParty[]
  dialog: VConDialog[]
  analysis?: {
    sentiment?: "positive" | "neutral" | "negative"
    keywords?: string[]
    topics?: string[]
    summary?: string
  }
}

// Helper function to generate UUIDs
const generateUUID = () => {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
    const r = (Math.random() * 16) | 0
    const v = c == "x" ? r : (r & 0x3) | 0x8
    return v.toString(16)
  })
}

// Helper function to generate realistic dialog
const generateDialog = (category: string, participants: VConParty[], sentiment: string) => {
  const dialogs: Record<string, VConDialog[]> = {
    Frontend: [
      {
        type: "text",
        start: "2024-01-15T14:30:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "Hi, I need help with implementing a responsive navigation component in React.",
      },
      {
        type: "text",
        start: "2024-01-15T14:31:15-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "I'd be happy to help! Are you looking to create a mobile-first design with a hamburger menu?",
      },
      {
        type: "text",
        start: "2024-01-15T14:32:30-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "Yes, exactly. I want it to collapse on mobile and show full navigation on desktop.",
      },
      {
        type: "text",
        start: "2024-01-15T14:33:45-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Perfect! I recommend using CSS Grid or Flexbox with media queries. Would you like me to show you a code example?",
      },
    ],
    Backend: [
      {
        type: "text",
        start: "2024-01-12T10:00:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I'm having issues with my Node.js API performance. The response times are really slow.",
      },
      {
        type: "text",
        start: "2024-01-12T10:01:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Let's troubleshoot this together. Can you tell me about your current database queries and caching strategy?",
      },
      {
        type: "text",
        start: "2024-01-12T10:03:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I'm not using any caching currently, and some of my queries are pretty complex with multiple joins.",
      },
      {
        type: "text",
        start: "2024-01-12T10:04:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "That's likely the issue. Let's implement Redis caching and optimize those queries. I'll walk you through it step by step.",
      },
    ],
    Database: [
      {
        type: "text",
        start: "2024-01-16T09:15:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I need help optimizing my PostgreSQL database. Some queries are taking over 10 seconds to execute.",
      },
      {
        type: "text",
        start: "2024-01-16T09:16:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "That's definitely too slow. Let's start by analyzing your query execution plans. Have you checked which queries are the bottlenecks?",
      },
      {
        type: "text",
        start: "2024-01-16T09:18:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I ran EXPLAIN ANALYZE and found that table scans are happening instead of index usage.",
      },
      {
        type: "text",
        start: "2024-01-16T09:19:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Great detective work! Let's create the right indexes and rewrite some of those queries for better performance.",
      },
    ],
    DevOps: [
      {
        type: "text",
        start: "2024-01-13T11:00:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "Our Docker containers are consuming too much memory in production. Any suggestions for optimization?",
      },
      {
        type: "text",
        start: "2024-01-13T11:01:45-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Let's look at your Dockerfile and see if we can reduce the image size. Are you using multi-stage builds?",
      },
      {
        type: "text",
        start: "2024-01-13T11:03:15-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "No, I'm not familiar with multi-stage builds. Could you explain how they work?",
      },
      {
        type: "text",
        start: "2024-01-13T11:04:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Multi-stage builds allow you to use different base images for building and runtime, significantly reducing the final image size.",
      },
    ],
    Cloud: [
      {
        type: "text",
        start: "2024-01-17T14:20:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I'm trying to set up auto-scaling for my AWS Lambda functions but I'm not sure about the best practices.",
      },
      {
        type: "text",
        start: "2024-01-17T14:21:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Lambda actually auto-scales automatically, but let's discuss optimizing your function performance and cost. What's your current setup?",
      },
      {
        type: "text",
        start: "2024-01-17T14:23:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I have several functions handling API requests, but sometimes they timeout during high traffic.",
      },
      {
        type: "text",
        start: "2024-01-17T14:24:15-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "That sounds like a cold start issue. Let's implement connection pooling and optimize your function memory allocation.",
      },
    ],
    Language: [
      {
        type: "text",
        start: "2024-01-04T13:45:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I'm learning TypeScript and struggling with generic types. Can you help me understand them better?",
      },
      {
        type: "text",
        start: "2024-01-04T13:46:30-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Of course! Generics allow you to create reusable components that work with multiple types. Let me show you some examples.",
      },
      {
        type: "text",
        start: "2024-01-04T13:48:00-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "That would be great. I'm particularly confused about when to use T extends something versus just T.",
      },
      {
        type: "text",
        start: "2024-01-04T13:49:15-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Great question! 'T extends' is used for constraints - it limits what types T can be. Let me walk you through the differences.",
      },
    ],
    Support: [
      {
        type: "text",
        start: "2025-02-19T16:15:50-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "Hello, thank you for contacting our support team. My name is Sarah. How can I help you today?",
      },
      {
        type: "text",
        start: "2025-02-19T16:20:50-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "Hi Sarah, I'm having trouble accessing my account dashboard. It keeps showing an error message.",
      },
      {
        type: "text",
        start: "2025-02-19T16:25:21-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I'm sorry to hear that. Let me help you resolve this issue. Can you tell me what error message you're seeing?",
      },
      {
        type: "text",
        start: "2025-02-19T16:28:54-05:00",
        parties: [1],
        originator: 1,
        mimetype: "text/plain",
        body: "It says 'Session expired, please log in again' but even after logging in, I get the same message.",
      },
      {
        type: "text",
        start: "2025-02-19T16:32:26-05:00",
        parties: [0],
        originator: 0,
        mimetype: "text/plain",
        body: "I see the issue. This is usually caused by browser cache. Let me guide you through clearing your cache and cookies.",
      },
    ],
  }

  return dialogs[category] || dialogs.Support
}

export const sampleItems: ItemData[] = [
  // Frontend items
  {
    name: "React Component Discussion",
    id: "1",
    category: "Frontend",
    content: "Detailed discussion about React component architecture and best practices for state management",
    date: "2024-01-15",
    sentiment: "positive",
    keywords: ["react", "components", "state", "architecture"],
    duration: 45,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-15T14:30:00.000Z",
      parties: [
        { name: "Alex Chen", role: "developer", id: "alex.chen", mailto: "alex.chen@company.com" },
        { name: "TechBot", role: "assistant", id: "techbot", mailto: "support@techbot.ai" },
      ],
      dialog: generateDialog("Frontend", [], "positive"),
      analysis: {
        sentiment: "positive",
        keywords: ["react", "components", "responsive", "navigation"],
        topics: ["frontend development", "user interface", "mobile design"],
        summary: "Discussion about implementing responsive React components with mobile-first design approach.",
      },
    },
  },
  {
    name: "Vue.js Migration Planning",
    id: "2",
    category: "Frontend",
    content: "Planning session for migrating legacy jQuery code to Vue.js framework",
    date: "2024-01-10",
    sentiment: "neutral",
    keywords: ["vue", "migration", "jquery", "planning"],
    duration: 60,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-10T10:00:00.000Z",
      parties: [
        {
          name: "Emma Rodriguez",
          role: "senior_developer",
          id: "emma.rodriguez",
          mailto: "emma.rodriguez@company.com",
        },
        { name: "DevAssistant", role: "bot", id: "devassistant", mailto: "help@devassistant.com" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-10T10:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I need help planning our jQuery to Vue.js migration. Where should we start?",
        },
        {
          type: "text",
          start: "2024-01-10T10:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great question! Let's start by auditing your current jQuery codebase and identifying components that can be easily converted.",
        },
        {
          type: "text",
          start: "2024-01-10T10:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "We have a lot of DOM manipulation and event handlers. How do we handle those in Vue?",
        },
        {
          type: "text",
          start: "2024-01-10T10:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Vue's reactive data binding will replace most DOM manipulation. Let me show you how to convert your event handlers to Vue methods.",
        },
      ],
      analysis: {
        sentiment: "neutral",
        keywords: ["vue.js", "migration", "jquery", "planning", "conversion"],
        topics: ["framework migration", "code refactoring", "technical planning"],
        summary: "Planning session for migrating legacy jQuery codebase to Vue.js framework.",
      },
    },
  },
  {
    name: "Angular Performance Issues",
    id: "3",
    category: "Frontend",
    content: "Troubleshooting performance bottlenecks in Angular application",
    date: "2024-01-08",
    sentiment: "negative",
    keywords: ["angular", "performance", "optimization", "debugging"],
    duration: 90,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-08T09:00:00.000Z",
      parties: [
        { name: "Mike Johnson", role: "developer", id: "mike.johnson", mailto: "mike.johnson@company.com" },
        { name: "PerformanceBot", role: "specialist_agent", id: "perfbot", mailto: "perf@techsupport.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-08T09:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Our Angular app is really slow, especially when loading large datasets. Users are complaining about the lag.",
        },
        {
          type: "text",
          start: "2024-01-08T09:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "I understand your frustration. Let's identify the bottlenecks. Are you using OnPush change detection strategy?",
        },
        {
          type: "text",
          start: "2024-01-08T09:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "No, we're using the default change detection. Is that causing the performance issues?",
        },
        {
          type: "text",
          start: "2024-01-08T09:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "That's likely a major factor. Default change detection runs on every event. Let's implement OnPush and virtual scrolling for your large datasets.",
        },
      ],
      analysis: {
        sentiment: "negative",
        keywords: ["angular", "performance", "change detection", "optimization"],
        topics: ["performance optimization", "angular best practices", "user experience"],
        summary:
          "Troubleshooting Angular application performance issues with focus on change detection and large dataset handling.",
      },
    },
  },
  {
    name: "Svelte Framework Evaluation",
    id: "4",
    category: "Frontend",
    content: "Evaluating Svelte as a potential framework for new projects",
    date: "2024-01-20",
    sentiment: "positive",
    keywords: ["svelte", "evaluation", "framework", "comparison"],
    duration: 30,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-20T15:00:00.000Z",
      parties: [
        { name: "Lisa Wang", role: "tech_lead", id: "lisa.wang", mailto: "lisa.wang@company.com" },
        { name: "FrameworkAdvisor", role: "consultant_bot", id: "frameworkbot", mailto: "advice@frameworks.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-20T15:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "We're considering Svelte for our next project. What are the main advantages over React or Vue?",
        },
        {
          type: "text",
          start: "2024-01-20T15:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Svelte offers several benefits: smaller bundle sizes, no virtual DOM overhead, and compile-time optimizations. It's great for performance-critical applications.",
        },
        {
          type: "text",
          start: "2024-01-20T15:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "That sounds promising! What about the learning curve and ecosystem maturity?",
        },
        {
          type: "text",
          start: "2024-01-20T15:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "The learning curve is gentle if you know HTML, CSS, and JavaScript. The ecosystem is growing rapidly, though not as mature as React's yet.",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["svelte", "framework", "performance", "evaluation"],
        topics: ["technology evaluation", "framework comparison", "project planning"],
        summary: "Evaluation of Svelte framework for new project development with focus on performance benefits.",
      },
    },
  },
  // Backend items
  {
    name: "Node.js API Design",
    id: "5",
    category: "Backend",
    content: "Designing RESTful APIs using Node.js and Express framework",
    date: "2024-01-12",
    sentiment: "positive",
    keywords: ["nodejs", "api", "rest", "express"],
    duration: 75,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-12T10:00:00.000Z",
      parties: [
        { name: "Tom Brown", role: "backend_developer", id: "tom.brown", mailto: "tom.brown@company.com" },
        { name: "APIExpert", role: "technical_assistant", id: "apiexpert", mailto: "api@techhelp.ai" },
      ],
      dialog: generateDialog("Backend", [], "positive"),
      analysis: {
        sentiment: "positive",
        keywords: ["nodejs", "api", "rest", "express", "performance"],
        topics: ["api design", "backend development", "performance optimization"],
        summary: "Discussion about Node.js API performance optimization and caching strategies.",
      },
    },
  },
  {
    name: "Express Middleware Security",
    id: "6",
    category: "Backend",
    content: "Implementing security middleware for Express applications",
    date: "2024-01-18",
    sentiment: "neutral",
    keywords: ["express", "security", "middleware", "authentication"],
    duration: 50,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-18T11:30:00.000Z",
      parties: [
        { name: "Sarah Kim", role: "security_engineer", id: "sarah.kim", mailto: "sarah.kim@company.com" },
        { name: "SecurityBot", role: "security_specialist", id: "secbot", mailto: "security@protection.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-18T11:30:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I need to implement security middleware for our Express app. What are the essential security measures?",
        },
        {
          type: "text",
          start: "2024-01-18T11:32:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great question! Essential middleware includes helmet for security headers, rate limiting, CORS configuration, and input validation.",
        },
        {
          type: "text",
          start: "2024-01-18T11:34:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Should I implement JWT authentication middleware as well?",
        },
        {
          type: "text",
          start: "2024-01-18T11:36:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "JWT middleware is crucial for protecting your routes. Let me show you how to implement it securely with proper token validation.",
        },
      ],
      analysis: {
        sentiment: "neutral",
        keywords: ["express", "security", "middleware", "jwt", "authentication"],
        topics: ["web security", "middleware implementation", "authentication"],
        summary:
          "Implementation of security middleware for Express applications including authentication and protection measures.",
      },
    },
  },
  {
    name: "Django ORM Optimization",
    id: "7",
    category: "Backend",
    content: "Optimizing database queries using Django ORM best practices",
    date: "2024-01-05",
    sentiment: "positive",
    keywords: ["django", "orm", "database", "optimization"],
    duration: 65,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-05T14:00:00.000Z",
      parties: [
        {
          name: "Carlos Martinez",
          role: "python_developer",
          id: "carlos.martinez",
          mailto: "carlos.martinez@company.com",
        },
        { name: "DjangoHelper", role: "framework_assistant", id: "djangobot", mailto: "django@codehelp.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-05T14:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "My Django queries are getting slow as our data grows. What are the best practices for ORM optimization?",
        },
        {
          type: "text",
          start: "2024-01-05T14:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great timing to optimize! Key strategies include using select_related and prefetch_related, avoiding N+1 queries, and using database indexes effectively.",
        },
        {
          type: "text",
          start: "2024-01-05T14:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm not sure when to use select_related vs prefetch_related. Can you explain the difference?",
        },
        {
          type: "text",
          start: "2024-01-05T14:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Perfect question! Use select_related for ForeignKey and OneToOne relationships, and prefetch_related for ManyToMany and reverse ForeignKey relationships.",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["django", "orm", "optimization", "database", "performance"],
        topics: ["database optimization", "django best practices", "query performance"],
        summary:
          "Django ORM optimization discussion focusing on query efficiency and database performance improvements.",
      },
    },
  },
  {
    name: "Flask Deployment Issues",
    id: "8",
    category: "Backend",
    content: "Resolving deployment issues with Flask application on production server",
    date: "2024-01-22",
    sentiment: "negative",
    keywords: ["flask", "deployment", "production", "troubleshooting"],
    duration: 120,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-22T16:00:00.000Z",
      parties: [
        { name: "Jennifer Lee", role: "devops_engineer", id: "jennifer.lee", mailto: "jennifer.lee@company.com" },
        { name: "DeploymentBot", role: "deployment_specialist", id: "deploybot", mailto: "deploy@cloudops.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-22T16:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Our Flask app works fine locally but keeps crashing in production. I'm getting 500 errors and can't figure out why.",
        },
        {
          type: "text",
          start: "2024-01-22T16:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Production issues can be tricky. Let's check your error logs first. Are you using a WSGI server like Gunicorn or uWSGI?",
        },
        {
          type: "text",
          start: "2024-01-22T16:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm using Gunicorn, but the logs show import errors for some modules that work fine locally.",
        },
        {
          type: "text",
          start: "2024-01-22T16:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "That suggests environment differences. Let's check your requirements.txt, Python versions, and virtual environment setup on the production server.",
        },
      ],
      analysis: {
        sentiment: "negative",
        keywords: ["flask", "deployment", "production", "gunicorn", "troubleshooting"],
        topics: ["deployment issues", "production debugging", "environment configuration"],
        summary:
          "Troubleshooting Flask application deployment issues in production environment with focus on environment configuration.",
      },
    },
  },
  {
    name: "FastAPI Documentation",
    id: "9",
    category: "Backend",
    content: "Creating comprehensive API documentation using FastAPI automatic docs",
    date: "2024-01-14",
    sentiment: "positive",
    keywords: ["fastapi", "documentation", "swagger", "api"],
    duration: 40,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-14T13:00:00.000Z",
      parties: [
        { name: "David Park", role: "api_developer", id: "david.park", mailto: "david.park@company.com" },
        { name: "DocsAssistant", role: "documentation_bot", id: "docsbot", mailto: "docs@apihelp.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-14T13:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I love how FastAPI generates automatic documentation, but I want to make it more comprehensive. Any tips?",
        },
        {
          type: "text",
          start: "2024-01-14T13:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "FastAPI's auto-docs are great! You can enhance them with detailed docstrings, Pydantic models with examples, and custom OpenAPI metadata.",
        },
        {
          type: "text",
          start: "2024-01-14T13:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "How do I add examples to my request/response models?",
        },
        {
          type: "text",
          start: "2024-01-14T13:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Use Pydantic's Config class with schema_extra or Field with examples. This will show realistic data in your Swagger UI documentation.",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["fastapi", "documentation", "swagger", "pydantic", "openapi"],
        topics: ["api documentation", "fastapi features", "developer experience"],
        summary: "Discussion about enhancing FastAPI automatic documentation with comprehensive examples and metadata.",
      },
    },
  },
  // Database items
  {
    name: "PostgreSQL Performance Tuning",
    id: "10",
    category: "Database",
    content: "Tuning PostgreSQL database performance for high-traffic applications",
    date: "2024-01-16",
    sentiment: "neutral",
    keywords: ["postgresql", "performance", "tuning", "optimization"],
    duration: 85,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-16T09:15:00.000Z",
      parties: [
        { name: "Rachel Green", role: "database_admin", id: "rachel.green", mailto: "rachel.green@company.com" },
        { name: "PostgresExpert", role: "database_specialist", id: "pgexpert", mailto: "postgres@dbhelp.ai" },
      ],
      dialog: generateDialog("Database", [], "neutral"),
      analysis: {
        sentiment: "neutral",
        keywords: ["postgresql", "performance", "indexing", "query optimization"],
        topics: ["database performance", "query optimization", "indexing strategies"],
        summary: "PostgreSQL performance tuning session focusing on query optimization and proper indexing strategies.",
      },
    },
  },
  {
    name: "MongoDB Schema Design",
    id: "11",
    category: "Database",
    content: "Designing efficient MongoDB schemas for document-based data storage",
    date: "2024-01-11",
    sentiment: "positive",
    keywords: ["mongodb", "schema", "design", "nosql"],
    duration: 55,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-11T10:30:00.000Z",
      parties: [
        { name: "Kevin Wu", role: "nosql_developer", id: "kevin.wu", mailto: "kevin.wu@company.com" },
        { name: "MongoHelper", role: "nosql_specialist", id: "mongobot", mailto: "mongo@nosqlhelp.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-11T10:30:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm designing a MongoDB schema for an e-commerce platform. Should I embed product reviews in the product document?",
        },
        {
          type: "text",
          start: "2024-01-11T10:32:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great question! It depends on the review volume. If you expect many reviews, consider referencing them separately to avoid document size limits.",
        },
        {
          type: "text",
          start: "2024-01-11T10:34:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "What about user data? Should I embed user preferences in the user document?",
        },
        {
          type: "text",
          start: "2024-01-11T10:36:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "User preferences are perfect for embedding since they're typically accessed together and don't grow unbounded. Follow the data access patterns!",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["mongodb", "schema", "design", "embedding", "referencing"],
        topics: ["nosql design", "document modeling", "data architecture"],
        summary:
          "MongoDB schema design consultation for e-commerce platform with focus on embedding vs referencing strategies.",
      },
    },
  },
  {
    name: "Redis Caching Strategy",
    id: "12",
    category: "Database",
    content: "Implementing Redis caching strategies to improve application performance",
    date: "2024-01-19",
    sentiment: "positive",
    keywords: ["redis", "caching", "performance", "strategy"],
    duration: 45,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-19T14:45:00.000Z",
      parties: [
        { name: "Amy Chen", role: "performance_engineer", id: "amy.chen", mailto: "amy.chen@company.com" },
        { name: "CacheBot", role: "caching_specialist", id: "cachebot", mailto: "cache@performance.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-19T14:45:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "We want to implement Redis caching to speed up our API responses. What's the best strategy for cache invalidation?",
        },
        {
          type: "text",
          start: "2024-01-19T14:47:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Excellent choice! For cache invalidation, consider using TTL for time-sensitive data and event-driven invalidation for data that changes based on user actions.",
        },
        {
          type: "text",
          start: "2024-01-19T14:49:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Should we cache entire API responses or just database query results?",
        },
        {
          type: "text",
          start: "2024-01-19T14:51:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Start with caching expensive database queries, then move to response caching for frequently accessed endpoints. This gives you the best performance gains.",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["redis", "caching", "performance", "invalidation", "api"],
        topics: ["caching strategies", "performance optimization", "redis implementation"],
        summary:
          "Redis caching strategy discussion focusing on cache invalidation patterns and performance optimization techniques.",
      },
    },
  },
  // DevOps items
  {
    name: "Docker Container Optimization",
    id: "13",
    category: "DevOps",
    content: "Optimizing Docker containers for smaller image sizes and faster deployments",
    date: "2024-01-13",
    sentiment: "neutral",
    keywords: ["docker", "containers", "optimization", "deployment"],
    duration: 70,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-13T11:00:00.000Z",
      parties: [
        { name: "Mark Thompson", role: "devops_engineer", id: "mark.thompson", mailto: "mark.thompson@company.com" },
        { name: "ContainerBot", role: "containerization_expert", id: "containerbot", mailto: "docker@devops.ai" },
      ],
      dialog: generateDialog("DevOps", [], "neutral"),
      analysis: {
        sentiment: "neutral",
        keywords: ["docker", "optimization", "multi-stage", "containers"],
        topics: ["containerization", "deployment optimization", "docker best practices"],
        summary:
          "Docker container optimization discussion focusing on multi-stage builds and image size reduction techniques.",
      },
    },
  },
  {
    name: "Kubernetes Cluster Issues",
    id: "14",
    category: "DevOps",
    content: "Troubleshooting Kubernetes cluster networking and pod communication issues",
    date: "2024-01-07",
    sentiment: "negative",
    keywords: ["kubernetes", "cluster", "networking", "troubleshooting"],
    duration: 150,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-07T08:00:00.000Z",
      parties: [
        { name: "Steve Wilson", role: "platform_engineer", id: "steve.wilson", mailto: "steve.wilson@company.com" },
        { name: "K8sExpert", role: "kubernetes_specialist", id: "k8sbot", mailto: "kubernetes@cloudnative.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-07T08:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Our Kubernetes pods can't communicate with each other. The networking seems completely broken and I'm not sure where to start debugging.",
        },
        {
          type: "text",
          start: "2024-01-07T08:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Network issues in K8s can be complex. Let's start with the basics - check your CNI plugin status and pod network CIDR configuration.",
        },
        {
          type: "text",
          start: "2024-01-07T08:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm using Calico as the CNI. The pods are getting IP addresses but can't reach services or other pods.",
        },
        {
          type: "text",
          start: "2024-01-07T08:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "That suggests a routing issue. Let's check your Calico node status and ensure there are no network policy conflicts blocking the traffic.",
        },
      ],
      analysis: {
        sentiment: "negative",
        keywords: ["kubernetes", "networking", "calico", "troubleshooting", "pods"],
        topics: ["kubernetes networking", "cluster troubleshooting", "CNI issues"],
        summary:
          "Kubernetes cluster networking troubleshooting session focusing on pod communication and CNI configuration issues.",
      },
    },
  },
  // Cloud items
  {
    name: "AWS Lambda Functions",
    id: "15",
    category: "Cloud",
    content: "Developing serverless functions using AWS Lambda for microservices architecture",
    date: "2024-01-17",
    sentiment: "positive",
    keywords: ["aws", "lambda", "serverless", "microservices"],
    duration: 60,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-17T14:20:00.000Z",
      parties: [
        { name: "Jessica Davis", role: "cloud_architect", id: "jessica.davis", mailto: "jessica.davis@company.com" },
        { name: "LambdaBot", role: "serverless_specialist", id: "lambdabot", mailto: "lambda@aws-help.ai" },
      ],
      dialog: generateDialog("Cloud", [], "positive"),
      analysis: {
        sentiment: "positive",
        keywords: ["aws", "lambda", "serverless", "auto-scaling", "performance"],
        topics: ["serverless architecture", "aws lambda optimization", "cloud functions"],
        summary:
          "AWS Lambda optimization discussion focusing on auto-scaling configuration and performance tuning for serverless functions.",
      },
    },
  },
  {
    name: "Azure DevOps Pipeline",
    id: "16",
    category: "Cloud",
    content: "Setting up CI/CD pipelines using Azure DevOps for automated deployments",
    date: "2024-01-09",
    sentiment: "neutral",
    keywords: ["azure", "devops", "cicd", "pipeline"],
    duration: 90,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-09T13:00:00.000Z",
      parties: [
        { name: "Robert Kim", role: "devops_lead", id: "robert.kim", mailto: "robert.kim@company.com" },
        { name: "AzureAssistant", role: "azure_specialist", id: "azurebot", mailto: "azure@cloudops.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-09T13:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I need to set up a CI/CD pipeline in Azure DevOps for our .NET application. What's the best approach?",
        },
        {
          type: "text",
          start: "2024-01-09T13:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great choice! For .NET apps, I recommend using Azure Pipelines with YAML configuration. Start with build triggers on main branch commits.",
        },
        {
          type: "text",
          start: "2024-01-09T13:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Should I include automated testing in the pipeline?",
        },
        {
          type: "text",
          start: "2024-01-09T13:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Include unit tests, integration tests, and code quality checks. Use test results to gate your deployments to production.",
        },
      ],
      analysis: {
        sentiment: "neutral",
        keywords: ["azure", "devops", "cicd", "pipeline", "dotnet"],
        topics: ["ci/cd implementation", "azure devops", "automated testing"],
        summary:
          "Azure DevOps CI/CD pipeline setup discussion for .NET application with focus on automated testing and deployment gates.",
      },
    },
  },
  {
    name: "GCP Cost Optimization",
    id: "17",
    category: "Cloud",
    content: "Analyzing and optimizing Google Cloud Platform costs for better resource utilization",
    date: "2024-01-21",
    sentiment: "positive",
    keywords: ["gcp", "cost", "optimization", "resources"],
    duration: 75,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-21T10:00:00.000Z",
      parties: [
        { name: "Linda Zhang", role: "cloud_engineer", id: "linda.zhang", mailto: "linda.zhang@company.com" },
        { name: "GCPOptimizer", role: "cost_optimization_bot", id: "gcpbot", mailto: "gcp@costoptim.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-21T10:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Our GCP bill is getting expensive. What are the best strategies for cost optimization without sacrificing performance?",
        },
        {
          type: "text",
          start: "2024-01-21T10:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Let's start with the big wins: right-sizing your compute instances, using preemptible VMs for non-critical workloads, and implementing auto-scaling.",
        },
        {
          type: "text",
          start: "2024-01-21T10:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "We're using a lot of storage. Any recommendations for optimizing storage costs?",
        },
        {
          type: "text",
          start: "2024-01-21T10:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Definitely! Use lifecycle policies to move old data to cheaper storage classes, compress data where possible, and delete unused snapshots and images.",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["gcp", "cost optimization", "compute", "storage", "auto-scaling"],
        topics: ["cloud cost management", "resource optimization", "gcp best practices"],
        summary:
          "GCP cost optimization consultation focusing on compute right-sizing, storage lifecycle management, and auto-scaling strategies.",
      },
    },
  },
  {
    name: "Vercel Deployment Setup",
    id: "18",
    category: "Cloud",
    content: "Configuring Vercel for automatic deployments of Next.js applications",
    date: "2024-01-06",
    sentiment: "positive",
    keywords: ["vercel", "deployment", "nextjs", "automation"],
    duration: 35,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-06T16:00:00.000Z",
      parties: [
        { name: "Chris Lee", role: "frontend_developer", id: "chris.lee", mailto: "chris.lee@company.com" },
        { name: "VercelBot", role: "deployment_assistant", id: "vercelbot", mailto: "vercel@deploy.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-06T16:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I want to deploy my Next.js app on Vercel with automatic deployments from GitHub. How do I set this up?",
        },
        {
          type: "text",
          start: "2024-01-06T16:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Perfect choice for Next.js! Connect your GitHub repo to Vercel, and it will automatically deploy on every push to main. The setup is incredibly simple.",
        },
        {
          type: "text",
          start: "2024-01-06T16:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "What about environment variables and preview deployments?",
        },
        {
          type: "text",
          start: "2024-01-06T16:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Vercel handles both beautifully! Set environment variables in the dashboard, and every PR gets its own preview URL automatically. It's developer heaven!",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["vercel", "nextjs", "deployment", "github", "automation"],
        topics: ["vercel deployment", "nextjs hosting", "continuous deployment"],
        summary:
          "Vercel deployment setup for Next.js application with automatic GitHub integration and preview deployments.",
      },
    },
  },
  // Language items
  {
    name: "Python Code Review",
    id: "19",
    category: "Language",
    content: "Code review session focusing on Python best practices and PEP 8 compliance",
    date: "2024-01-04",
    sentiment: "neutral",
    keywords: ["python", "code review", "best practices", "pep8"],
    duration: 80,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-04T13:45:00.000Z",
      parties: [
        {
          name: "Maria Gonzalez",
          role: "python_developer",
          id: "maria.gonzalez",
          mailto: "maria.gonzalez@company.com",
        },
        { name: "PythonMentor", role: "code_review_bot", id: "pythonbot", mailto: "python@codereview.ai" },
      ],
      dialog: generateDialog("Language", [], "neutral"),
      analysis: {
        sentiment: "neutral",
        keywords: ["python", "code review", "pep8", "best practices", "generics"],
        topics: ["code quality", "python standards", "code review process"],
        summary:
          "Python code review session focusing on PEP 8 compliance, best practices, and code quality improvements.",
      },
    },
  },
  {
    name: "JavaScript ES6 Features",
    id: "20",
    category: "Language",
    content: "Training session on modern JavaScript ES6+ features and syntax",
    date: "2024-01-23",
    sentiment: "positive",
    keywords: ["javascript", "es6", "features", "training"],
    duration: 95,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-23T14:00:00.000Z",
      parties: [
        { name: "Alex Rivera", role: "junior_developer", id: "alex.rivera", mailto: "alex.rivera@company.com" },
        { name: "JSTrainer", role: "javascript_instructor", id: "jstrainer", mailto: "js@training.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-23T14:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I want to learn modern JavaScript features. What are the most important ES6+ features I should focus on?",
        },
        {
          type: "text",
          start: "2024-01-23T14:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Great question! Start with arrow functions, destructuring, template literals, and async/await. These will transform how you write JavaScript.",
        },
        {
          type: "text",
          start: "2024-01-23T14:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I've heard about destructuring but don't really understand when to use it. Can you explain?",
        },
        {
          type: "text",
          start: "2024-01-23T14:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Destructuring is perfect for extracting values from objects and arrays. It makes your code cleaner and more readable. Let me show you some examples!",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["javascript", "es6", "arrow functions", "destructuring", "async"],
        topics: ["javascript training", "modern syntax", "es6 features"],
        summary:
          "JavaScript ES6+ training session covering modern features like arrow functions, destructuring, and async/await.",
      },
    },
  },
  {
    name: "TypeScript Migration",
    id: "21",
    category: "Language",
    content: "Planning and executing migration from JavaScript to TypeScript",
    date: "2024-01-03",
    sentiment: "neutral",
    keywords: ["typescript", "migration", "javascript", "types"],
    duration: 110,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-03T09:00:00.000Z",
      parties: [
        { name: "Sam Johnson", role: "tech_lead", id: "sam.johnson", mailto: "sam.johnson@company.com" },
        { name: "TypeScriptGuide", role: "migration_specialist", id: "tsguide", mailto: "typescript@migration.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-03T09:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "We want to migrate our large JavaScript codebase to TypeScript. What's the best strategy to minimize disruption?",
        },
        {
          type: "text",
          start: "2024-01-03T09:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Smart move! Start with a gradual migration: rename .js files to .ts, add basic types, then progressively strengthen type safety. Use 'any' initially if needed.",
        },
        {
          type: "text",
          start: "2024-01-03T09:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Should we migrate our entire codebase at once or do it module by module?",
        },
        {
          type: "text",
          start: "2024-01-03T09:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Definitely module by module! Start with utility functions and shared components, then work your way up. This allows your team to learn gradually.",
        },
      ],
      analysis: {
        sentiment: "neutral",
        keywords: ["typescript", "migration", "javascript", "gradual", "types"],
        topics: ["typescript migration", "code transformation", "type safety"],
        summary:
          "TypeScript migration planning session focusing on gradual migration strategies and minimizing development disruption.",
      },
    },
  },
  {
    name: "Go Concurrency Patterns",
    id: "22",
    category: "Language",
    content: "Learning Go concurrency patterns and goroutine best practices",
    date: "2024-01-25",
    sentiment: "positive",
    keywords: ["go", "concurrency", "goroutines", "patterns"],
    duration: 65,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-25T11:00:00.000Z",
      parties: [
        { name: "Taylor Swift", role: "backend_developer", id: "taylor.swift", mailto: "taylor.swift@company.com" },
        { name: "GoExpert", role: "go_specialist", id: "goexpert", mailto: "go@concurrency.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-25T11:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm new to Go and want to understand goroutines and channels. What are the key patterns I should learn?",
        },
        {
          type: "text",
          start: "2024-01-25T11:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Excellent! Start with the worker pool pattern, fan-in/fan-out, and select statements. These cover most real-world concurrency scenarios.",
        },
        {
          type: "text",
          start: "2024-01-25T11:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "When should I use buffered vs unbuffered channels?",
        },
        {
          type: "text",
          start: "2024-01-25T11:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Use unbuffered channels for synchronization and buffered channels when you want to decouple sender and receiver timing. Buffer size depends on your use case!",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["go", "goroutines", "channels", "concurrency", "patterns"],
        topics: ["go concurrency", "goroutine patterns", "channel communication"],
        summary:
          "Go concurrency training session covering goroutines, channels, and common concurrency patterns like worker pools.",
      },
    },
  },
  {
    name: "Rust Memory Management",
    id: "23",
    category: "Language",
    content: "Understanding Rust's ownership system and memory safety features",
    date: "2024-01-02",
    sentiment: "negative",
    keywords: ["rust", "memory", "ownership", "safety"],
    duration: 125,
    participants: 2,
    vcon: {
      uuid: generateUUID(),
      vcon: "0.0.1",
      created_at: "2024-01-02T10:00:00.000Z",
      parties: [
        { name: "Jordan Smith", role: "systems_programmer", id: "jordan.smith", mailto: "jordan.smith@company.com" },
        { name: "RustMentor", role: "rust_specialist", id: "rustmentor", mailto: "rust@systems.ai" },
      ],
      dialog: [
        {
          type: "text",
          start: "2024-01-02T10:00:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm struggling with Rust's borrow checker. It keeps rejecting my code and I don't understand why. This is really frustrating!",
        },
        {
          type: "text",
          start: "2024-01-02T10:02:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "I understand the frustration! The borrow checker is strict but it's preventing memory bugs. Let's work through your specific issues step by step.",
        },
        {
          type: "text",
          start: "2024-01-02T10:04:00-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "I'm trying to modify a vector while iterating over it, but Rust won't let me. How do I handle this pattern?",
        },
        {
          type: "text",
          start: "2024-01-02T10:06:00-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "That's a common issue! You can't mutate while iterating due to safety rules. Use collect() to create a new vector, or iterate by index, or use retain() for filtering patterns.",
        },
      ],
      analysis: {
        sentiment: "negative",
        keywords: ["rust", "borrow checker", "memory safety", "ownership", "iteration"],
        topics: ["rust ownership", "memory management", "borrow checker"],
        summary:
          "Rust memory management troubleshooting session focusing on borrow checker issues and safe iteration patterns.",
      },
    },
  },
  // Support item (using the original vCon structure you provided)
  {
    name: "Customer Support Call",
    id: "24",
    category: "Support",
    content: "Customer inquiry about adding a new vehicle to insurance policy",
    date: "2025-02-19",
    sentiment: "positive",
    keywords: ["insurance", "policy", "vehicle", "customer service"],
    duration: 15,
    participants: 2,
    vcon: {
      uuid: "0195b780-5836-83e6-9dd8-dd37220d739c",
      vcon: "0.0.1",
      created_at: "2025-02-19T16:15:50.000Z",
      parties: [
        {
          tel: "",
          mailto: "joe.perry@autoinsurancecompany.com",
          name: "Joe Perry",
          role: "agent",
          id: "joe.perry@autoinsurancecompany.com",
        },
        {
          tel: "+16366861771",
          mailto: "abigail.robinson@gmail.com",
          name: "Abigail Robinson",
          role: "customer",
          id: "+16366861771",
        },
      ],
      dialog: [
        {
          type: "text",
          start: "2025-02-19T16:15:50-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Hello, thank you for contacting Old Stone Insurance. My name is Joe Perry. May I please have your name?",
        },
        {
          type: "text",
          start: "2025-02-19T16:20:50-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Hi, my name is Abigail Robinson.",
        },
        {
          type: "text",
          start: "2025-02-19T16:25:21-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Thank you, Abigail. Could you please provide me with your policy number?",
        },
        {
          type: "text",
          start: "2025-02-19T16:28:54-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "Sure, my policy number is five six eight seven two.",
        },
        {
          type: "text",
          start: "2025-02-19T16:32:26-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Thank you, Abigail. Also, can you confirm your date of birth for security purposes?",
        },
        {
          type: "text",
          start: "2025-02-19T16:35:58-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "My date of birth is zero four one five one nine eight nine.",
        },
        {
          type: "text",
          start: "2025-02-19T16:38:03-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Great, thank you for verifying. Is there anything specific you need assistance with today regarding your policy?",
        },
        {
          type: "text",
          start: "2025-02-19T16:43:50-05:00",
          parties: [1],
          originator: 1,
          mimetype: "text/plain",
          body: "I have a question about adding a new vehicle to my coverage.",
        },
        {
          type: "text",
          start: "2025-02-19T16:47:48-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Of course, I'd be happy to help with that. Let's go ahead and discuss the details. Thank you for reaching out, Abigail. Please let me know if you need anything else.",
        },
        {
          type: "text",
          start: "2025-02-19T16:53:43-05:00",
          parties: [0],
          originator: 0,
          mimetype: "text/plain",
          body: "Thank you for your time. Have a great day!",
        },
      ],
      analysis: {
        sentiment: "positive",
        keywords: ["insurance", "policy", "vehicle", "customer service", "verification"],
        topics: ["policy management", "customer support", "vehicle addition"],
        summary: "Customer service call about adding a new vehicle to an existing insurance policy.",
      },
    },
  },
]
